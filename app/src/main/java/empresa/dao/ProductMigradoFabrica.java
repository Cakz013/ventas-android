package empresa.dao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table "PRODUCT_MIGRADO_FABRICA".
 */
public class ProductMigradoFabrica implements java.io.Serializable, java.lang.Comparable {

    private Long id;
    private String linea;
    /** Not-null value. */
    private String referencia;
    private String descripcionDetallada;
    private String brand;
    private long talle_maximo;
    private long talle_minimo;
    private double precio;
    private double impuesto;
    private long idcoleccion;
    private long idproducto;
    private boolean permiteDescuentoPorDetalle;
    private Boolean usarPantallaModoClasicoParaStockFisico;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public ProductMigradoFabrica() {
    }

    public ProductMigradoFabrica(Long id) {
        this.id = id;
    }

    public ProductMigradoFabrica(Long id, String linea, String referencia, String descripcionDetallada, String brand, long talle_maximo, long talle_minimo, double precio, double impuesto, long idcoleccion, long idproducto, boolean permiteDescuentoPorDetalle, Boolean usarPantallaModoClasicoParaStockFisico) {
        this.id = id;
        this.linea = linea;
        this.referencia = referencia;
        this.descripcionDetallada = descripcionDetallada;
        this.brand = brand;
        this.talle_maximo = talle_maximo;
        this.talle_minimo = talle_minimo;
        this.precio = precio;
        this.impuesto = impuesto;
        this.idcoleccion = idcoleccion;
        this.idproducto = idproducto;
        this.permiteDescuentoPorDetalle = permiteDescuentoPorDetalle;
        this.usarPantallaModoClasicoParaStockFisico = usarPantallaModoClasicoParaStockFisico;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getLinea() {
        return linea;
    }

    public void setLinea(String linea) {
        this.linea = linea;
    }

    /** Not-null value. */
    public String getReferencia() {
        return referencia;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setReferencia(String referencia) {
        this.referencia = referencia;
    }

    public String getDescripcionDetallada() {
        return descripcionDetallada;
    }

    public void setDescripcionDetallada(String descripcionDetallada) {
        this.descripcionDetallada = descripcionDetallada;
    }

    public String getBrand() {
        return brand;
    }

    public void setBrand(String brand) {
        this.brand = brand;
    }

    public long getTalle_maximo() {
        return talle_maximo;
    }

    public void setTalle_maximo(long talle_maximo) {
        this.talle_maximo = talle_maximo;
    }

    public long getTalle_minimo() {
        return talle_minimo;
    }

    public void setTalle_minimo(long talle_minimo) {
        this.talle_minimo = talle_minimo;
    }

    public double getPrecio() {
        return precio;
    }

    public void setPrecio(double precio) {
        this.precio = precio;
    }

    public double getImpuesto() {
        return impuesto;
    }

    public void setImpuesto(double impuesto) {
        this.impuesto = impuesto;
    }

    public long getIdcoleccion() {
        return idcoleccion;
    }

    public void setIdcoleccion(long idcoleccion) {
        this.idcoleccion = idcoleccion;
    }

    public long getIdproducto() {
        return idproducto;
    }

    public void setIdproducto(long idproducto) {
        this.idproducto = idproducto;
    }

    public boolean getPermiteDescuentoPorDetalle() {
        return permiteDescuentoPorDetalle;
    }

    public void setPermiteDescuentoPorDetalle(boolean permiteDescuentoPorDetalle) {
        this.permiteDescuentoPorDetalle = permiteDescuentoPorDetalle;
    }

    public Boolean getUsarPantallaModoClasicoParaStockFisico() {
        return usarPantallaModoClasicoParaStockFisico;
    }

    public void setUsarPantallaModoClasicoParaStockFisico(Boolean usarPantallaModoClasicoParaStockFisico) {
        this.usarPantallaModoClasicoParaStockFisico = usarPantallaModoClasicoParaStockFisico;
    }

    // KEEP METHODS - put your custom methods here

    @Override
    public int compareTo(Object another) {
        return getReferencia().compareTo(((ProductMigradoFabrica)another).getReferencia());
    }

    @Override
    public String toString() {

        return "Product calzado referencia: " +getReferencia() + " idproducto: " +
                getIdproducto() + " idcoleccion: " + getIdcoleccion() + " talleMin: " + getTalle_minimo() + " talleMax: " + getTalle_maximo()
                + " precio "+ getPrecio() + " impuesto: " + getImpuesto() + "%";
    }
    // KEEP METHODS END

}
