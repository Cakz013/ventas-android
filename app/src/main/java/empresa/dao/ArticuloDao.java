package empresa.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import empresa.dao.Articulo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "ARTICULO".
*/
public class ArticuloDao extends AbstractDao<Articulo, Long> {

    public static final String TABLENAME = "ARTICULO";

    /**
     * Properties of entity Articulo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Idarticulo = new Property(0, Long.class, "idarticulo", true, "IDARTICULO");
        public final static Property Idproducto = new Property(1, Long.class, "idproducto", false, "IDPRODUCTO");
        public final static Property Idcoleccion = new Property(2, Long.class, "idcoleccion", false, "IDCOLECCION");
        public final static Property Codigobarra = new Property(3, String.class, "codigobarra", false, "CODIGOBARRA");
        public final static Property Referencia = new Property(4, String.class, "referencia", false, "REFERENCIA");
        public final static Property Descripcion = new Property(5, String.class, "descripcion", false, "DESCRIPCION");
        public final static Property Precioventaeq = new Property(6, Double.class, "precioventaeq", false, "PRECIOVENTAEQ");
        public final static Property Preciocostoeq = new Property(7, Double.class, "preciocostoeq", false, "PRECIOCOSTOEQ");
        public final static Property Preciocostoreal = new Property(8, Double.class, "preciocostoreal", false, "PRECIOCOSTOREAL");
        public final static Property Preciocostorealeq = new Property(9, Double.class, "preciocostorealeq", false, "PRECIOCOSTOREALEQ");
        public final static Property Color = new Property(10, String.class, "color", false, "COLOR");
        public final static Property Talle = new Property(11, String.class, "talle", false, "TALLE");
        public final static Property Ordentalle = new Property(12, Long.class, "ordentalle", false, "ORDENTALLE");
        public final static Property Idfamilia = new Property(13, Long.class, "idfamilia", false, "IDFAMILIA");
        public final static Property Cantidadreal = new Property(14, Long.class, "cantidadreal", false, "CANTIDADREAL");
        public final static Property Cantidadvirtual = new Property(15, Long.class, "cantidadvirtual", false, "CANTIDADVIRTUAL");
        public final static Property Cantcomprometidastock = new Property(16, Long.class, "cantcomprometidastock", false, "CANTCOMPROMETIDASTOCK");
        public final static Property Cantcomprometidavirtual = new Property(17, Long.class, "cantcomprometidavirtual", false, "CANTCOMPROMETIDAVIRTUAL");
        public final static Property Cantidadimportacion = new Property(18, Long.class, "cantidadimportacion", false, "CANTIDADIMPORTACION");
        public final static Property Idlineaarticulo = new Property(19, Long.class, "idlineaarticulo", false, "IDLINEAARTICULO");
        public final static Property Idgrupolineaarticulo = new Property(20, Long.class, "idgrupolineaarticulo", false, "IDGRUPOLINEAARTICULO");
        public final static Property Catalogo = new Property(21, String.class, "catalogo", false, "CATALOGO");
        public final static Property Nropagina = new Property(22, String.class, "nropagina", false, "NROPAGINA");
        public final static Property Categoriamargen = new Property(23, String.class, "categoriamargen", false, "CATEGORIAMARGEN");
        public final static Property Precioventa2 = new Property(24, Double.class, "precioventa2", false, "PRECIOVENTA2");
        public final static Property Precioventa3 = new Property(25, Double.class, "precioventa3", false, "PRECIOVENTA3");
        public final static Property Precioventa4 = new Property(26, Double.class, "precioventa4", false, "PRECIOVENTA4");
        public final static Property Maximodescuento = new Property(27, Double.class, "maximodescuento", false, "MAXIMODESCUENTO");
        public final static Property Produccion = new Property(28, String.class, "produccion", false, "PRODUCCION");
        public final static Property Idgrupo = new Property(29, Long.class, "idgrupo", false, "IDGRUPO");
        public final static Property Multiplicador = new Property(30, Long.class, "multiplicador", false, "MULTIPLICADOR");
        public final static Property Idempresa = new Property(31, Long.class, "idempresa", false, "IDEMPRESA");
        public final static Property IdproductMigracionFabricaCalzado = new Property(32, Long.class, "idproductMigracionFabricaCalzado", false, "IDPRODUCT_MIGRACION_FABRICA_CALZADO");
        public final static Property Md5imagen = new Property(33, String.class, "md5imagen", false, "MD5IMAGEN");
        public final static Property Idarticulosucursalubicacion = new Property(34, Long.class, "idarticulosucursalubicacion", false, "IDARTICULOSUCURSALUBICACION");
        public final static Property CodgradeEnarticulosucursalubicacion = new Property(35, Long.class, "codgradeEnarticulosucursalubicacion", false, "CODGRADE_ENARTICULOSUCURSALUBICACION");
        public final static Property Indlanzamiento = new Property(36, Boolean.class, "indlanzamiento", false, "INDLANZAMIENTO");
    };


    public ArticuloDao(DaoConfig config) {
        super(config);
    }

    public ArticuloDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'ARTICULO' (" + //
                "'IDARTICULO' INTEGER PRIMARY KEY ," + // 0: idarticulo
                "'IDPRODUCTO' INTEGER," + // 1: idproducto
                "'IDCOLECCION' INTEGER," + // 2: idcoleccion
                "'CODIGOBARRA' TEXT," + // 3: codigobarra
                "'REFERENCIA' TEXT," + // 4: referencia
                "'DESCRIPCION' TEXT," + // 5: descripcion
                "'PRECIOVENTAEQ' REAL," + // 6: precioventaeq
                "'PRECIOCOSTOEQ' REAL," + // 7: preciocostoeq
                "'PRECIOCOSTOREAL' REAL," + // 8: preciocostoreal
                "'PRECIOCOSTOREALEQ' REAL," + // 9: preciocostorealeq
                "'COLOR' TEXT," + // 10: color
                "'TALLE' TEXT," + // 11: talle
                "'ORDENTALLE' INTEGER," + // 12: ordentalle
                "'IDFAMILIA' INTEGER," + // 13: idfamilia
                "'CANTIDADREAL' INTEGER," + // 14: cantidadreal
                "'CANTIDADVIRTUAL' INTEGER," + // 15: cantidadvirtual
                "'CANTCOMPROMETIDASTOCK' INTEGER," + // 16: cantcomprometidastock
                "'CANTCOMPROMETIDAVIRTUAL' INTEGER," + // 17: cantcomprometidavirtual
                "'CANTIDADIMPORTACION' INTEGER," + // 18: cantidadimportacion
                "'IDLINEAARTICULO' INTEGER," + // 19: idlineaarticulo
                "'IDGRUPOLINEAARTICULO' INTEGER," + // 20: idgrupolineaarticulo
                "'CATALOGO' TEXT," + // 21: catalogo
                "'NROPAGINA' TEXT," + // 22: nropagina
                "'CATEGORIAMARGEN' TEXT," + // 23: categoriamargen
                "'PRECIOVENTA2' REAL," + // 24: precioventa2
                "'PRECIOVENTA3' REAL," + // 25: precioventa3
                "'PRECIOVENTA4' REAL," + // 26: precioventa4
                "'MAXIMODESCUENTO' REAL," + // 27: maximodescuento
                "'PRODUCCION' TEXT," + // 28: produccion
                "'IDGRUPO' INTEGER," + // 29: idgrupo
                "'MULTIPLICADOR' INTEGER," + // 30: multiplicador
                "'IDEMPRESA' INTEGER," + // 31: idempresa
                "'IDPRODUCT_MIGRACION_FABRICA_CALZADO' INTEGER," + // 32: idproductMigracionFabricaCalzado
                "'MD5IMAGEN' TEXT," + // 33: md5imagen
                "'IDARTICULOSUCURSALUBICACION' INTEGER," + // 34: idarticulosucursalubicacion
                "'CODGRADE_ENARTICULOSUCURSALUBICACION' INTEGER," + // 35: codgradeEnarticulosucursalubicacion
                "'INDLANZAMIENTO' INTEGER);"); // 36: indlanzamiento
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'ARTICULO'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, Articulo entity) {
        stmt.clearBindings();

        Long idarticulo = entity.getIdarticulo();
        if (idarticulo != null) {
            stmt.bindLong(1, idarticulo);
        }

        Long idproducto = entity.getIdproducto();
        if (idproducto != null) {
            stmt.bindLong(2, idproducto);
        }

        Long idcoleccion = entity.getIdcoleccion();
        if (idcoleccion != null) {
            stmt.bindLong(3, idcoleccion);
        }

        String codigobarra = entity.getCodigobarra();
        if (codigobarra != null) {
            stmt.bindString(4, codigobarra);
        }

        String referencia = entity.getReferencia();
        if (referencia != null) {
            stmt.bindString(5, referencia);
        }

        String descripcion = entity.getDescripcion();
        if (descripcion != null) {
            stmt.bindString(6, descripcion);
        }

        Double precioventaeq = entity.getPrecioventaeq();
        if (precioventaeq != null) {
            stmt.bindDouble(7, precioventaeq);
        }

        Double preciocostoeq = entity.getPreciocostoeq();
        if (preciocostoeq != null) {
            stmt.bindDouble(8, preciocostoeq);
        }

        Double preciocostoreal = entity.getPreciocostoreal();
        if (preciocostoreal != null) {
            stmt.bindDouble(9, preciocostoreal);
        }

        Double preciocostorealeq = entity.getPreciocostorealeq();
        if (preciocostorealeq != null) {
            stmt.bindDouble(10, preciocostorealeq);
        }

        String color = entity.getColor();
        if (color != null) {
            stmt.bindString(11, color);
        }

        String talle = entity.getTalle();
        if (talle != null) {
            stmt.bindString(12, talle);
        }

        Long ordentalle = entity.getOrdentalle();
        if (ordentalle != null) {
            stmt.bindLong(13, ordentalle);
        }

        Long idfamilia = entity.getIdfamilia();
        if (idfamilia != null) {
            stmt.bindLong(14, idfamilia);
        }

        Long cantidadreal = entity.getCantidadreal();
        if (cantidadreal != null) {
            stmt.bindLong(15, cantidadreal);
        }

        Long cantidadvirtual = entity.getCantidadvirtual();
        if (cantidadvirtual != null) {
            stmt.bindLong(16, cantidadvirtual);
        }

        Long cantcomprometidastock = entity.getCantcomprometidastock();
        if (cantcomprometidastock != null) {
            stmt.bindLong(17, cantcomprometidastock);
        }

        Long cantcomprometidavirtual = entity.getCantcomprometidavirtual();
        if (cantcomprometidavirtual != null) {
            stmt.bindLong(18, cantcomprometidavirtual);
        }

        Long cantidadimportacion = entity.getCantidadimportacion();
        if (cantidadimportacion != null) {
            stmt.bindLong(19, cantidadimportacion);
        }

        Long idlineaarticulo = entity.getIdlineaarticulo();
        if (idlineaarticulo != null) {
            stmt.bindLong(20, idlineaarticulo);
        }

        Long idgrupolineaarticulo = entity.getIdgrupolineaarticulo();
        if (idgrupolineaarticulo != null) {
            stmt.bindLong(21, idgrupolineaarticulo);
        }

        String catalogo = entity.getCatalogo();
        if (catalogo != null) {
            stmt.bindString(22, catalogo);
        }

        String nropagina = entity.getNropagina();
        if (nropagina != null) {
            stmt.bindString(23, nropagina);
        }

        String categoriamargen = entity.getCategoriamargen();
        if (categoriamargen != null) {
            stmt.bindString(24, categoriamargen);
        }

        Double precioventa2 = entity.getPrecioventa2();
        if (precioventa2 != null) {
            stmt.bindDouble(25, precioventa2);
        }

        Double precioventa3 = entity.getPrecioventa3();
        if (precioventa3 != null) {
            stmt.bindDouble(26, precioventa3);
        }

        Double precioventa4 = entity.getPrecioventa4();
        if (precioventa4 != null) {
            stmt.bindDouble(27, precioventa4);
        }

        Double maximodescuento = entity.getMaximodescuento();
        if (maximodescuento != null) {
            stmt.bindDouble(28, maximodescuento);
        }

        String produccion = entity.getProduccion();
        if (produccion != null) {
            stmt.bindString(29, produccion);
        }

        Long idgrupo = entity.getIdgrupo();
        if (idgrupo != null) {
            stmt.bindLong(30, idgrupo);
        }

        Long multiplicador = entity.getMultiplicador();
        if (multiplicador != null) {
            stmt.bindLong(31, multiplicador);
        }

        Long idempresa = entity.getIdempresa();
        if (idempresa != null) {
            stmt.bindLong(32, idempresa);
        }

        Long idproductMigracionFabricaCalzado = entity.getIdproductMigracionFabricaCalzado();
        if (idproductMigracionFabricaCalzado != null) {
            stmt.bindLong(33, idproductMigracionFabricaCalzado);
        }

        String md5imagen = entity.getMd5imagen();
        if (md5imagen != null) {
            stmt.bindString(34, md5imagen);
        }

        Long idarticulosucursalubicacion = entity.getIdarticulosucursalubicacion();
        if (idarticulosucursalubicacion != null) {
            stmt.bindLong(35, idarticulosucursalubicacion);
        }

        Long codgradeEnarticulosucursalubicacion = entity.getCodgradeEnarticulosucursalubicacion();
        if (codgradeEnarticulosucursalubicacion != null) {
            stmt.bindLong(36, codgradeEnarticulosucursalubicacion);
        }

        Boolean indlanzamiento = entity.getIndlanzamiento();
        if (indlanzamiento != null) {
            stmt.bindLong(37, indlanzamiento ? 1l: 0l);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }

    /** @inheritdoc */
    @Override
    public Articulo readEntity(Cursor cursor, int offset) {
        Articulo entity = new Articulo( //
                cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // idarticulo
                cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1), // idproducto
                cursor.isNull(offset + 2) ? null : cursor.getLong(offset + 2), // idcoleccion
                cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // codigobarra
                cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // referencia
                cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // descripcion
                cursor.isNull(offset + 6) ? null : cursor.getDouble(offset + 6), // precioventaeq
                cursor.isNull(offset + 7) ? null : cursor.getDouble(offset + 7), // preciocostoeq
                cursor.isNull(offset + 8) ? null : cursor.getDouble(offset + 8), // preciocostoreal
                cursor.isNull(offset + 9) ? null : cursor.getDouble(offset + 9), // preciocostorealeq
                cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // color
                cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // talle
                cursor.isNull(offset + 12) ? null : cursor.getLong(offset + 12), // ordentalle
                cursor.isNull(offset + 13) ? null : cursor.getLong(offset + 13), // idfamilia
                cursor.isNull(offset + 14) ? null : cursor.getLong(offset + 14), // cantidadreal
                cursor.isNull(offset + 15) ? null : cursor.getLong(offset + 15), // cantidadvirtual
                cursor.isNull(offset + 16) ? null : cursor.getLong(offset + 16), // cantcomprometidastock
                cursor.isNull(offset + 17) ? null : cursor.getLong(offset + 17), // cantcomprometidavirtual
                cursor.isNull(offset + 18) ? null : cursor.getLong(offset + 18), // cantidadimportacion
                cursor.isNull(offset + 19) ? null : cursor.getLong(offset + 19), // idlineaarticulo
                cursor.isNull(offset + 20) ? null : cursor.getLong(offset + 20), // idgrupolineaarticulo
                cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // catalogo
                cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // nropagina
                cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // categoriamargen
                cursor.isNull(offset + 24) ? null : cursor.getDouble(offset + 24), // precioventa2
                cursor.isNull(offset + 25) ? null : cursor.getDouble(offset + 25), // precioventa3
                cursor.isNull(offset + 26) ? null : cursor.getDouble(offset + 26), // precioventa4
                cursor.isNull(offset + 27) ? null : cursor.getDouble(offset + 27), // maximodescuento
                cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // produccion
                cursor.isNull(offset + 29) ? null : cursor.getLong(offset + 29), // idgrupo
                cursor.isNull(offset + 30) ? null : cursor.getLong(offset + 30), // multiplicador
                cursor.isNull(offset + 31) ? null : cursor.getLong(offset + 31), // idempresa
                cursor.isNull(offset + 32) ? null : cursor.getLong(offset + 32), // idproductMigracionFabricaCalzado
                cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // md5imagen
                cursor.isNull(offset + 34) ? null : cursor.getLong(offset + 34), // idarticulosucursalubicacion
                cursor.isNull(offset + 35) ? null : cursor.getLong(offset + 35), // codgradeEnarticulosucursalubicacion
                cursor.isNull(offset + 36) ? null : cursor.getShort(offset + 36) != 0 // indlanzamiento
        );
        return entity;
    }

    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, Articulo entity, int offset) {
        entity.setIdarticulo(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setIdproducto(cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1));
        entity.setIdcoleccion(cursor.isNull(offset + 2) ? null : cursor.getLong(offset + 2));
        entity.setCodigobarra(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setReferencia(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setDescripcion(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setPrecioventaeq(cursor.isNull(offset + 6) ? null : cursor.getDouble(offset + 6));
        entity.setPreciocostoeq(cursor.isNull(offset + 7) ? null : cursor.getDouble(offset + 7));
        entity.setPreciocostoreal(cursor.isNull(offset + 8) ? null : cursor.getDouble(offset + 8));
        entity.setPreciocostorealeq(cursor.isNull(offset + 9) ? null : cursor.getDouble(offset + 9));
        entity.setColor(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setTalle(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setOrdentalle(cursor.isNull(offset + 12) ? null : cursor.getLong(offset + 12));
        entity.setIdfamilia(cursor.isNull(offset + 13) ? null : cursor.getLong(offset + 13));
        entity.setCantidadreal(cursor.isNull(offset + 14) ? null : cursor.getLong(offset + 14));
        entity.setCantidadvirtual(cursor.isNull(offset + 15) ? null : cursor.getLong(offset + 15));
        entity.setCantcomprometidastock(cursor.isNull(offset + 16) ? null : cursor.getLong(offset + 16));
        entity.setCantcomprometidavirtual(cursor.isNull(offset + 17) ? null : cursor.getLong(offset + 17));
        entity.setCantidadimportacion(cursor.isNull(offset + 18) ? null : cursor.getLong(offset + 18));
        entity.setIdlineaarticulo(cursor.isNull(offset + 19) ? null : cursor.getLong(offset + 19));
        entity.setIdgrupolineaarticulo(cursor.isNull(offset + 20) ? null : cursor.getLong(offset + 20));
        entity.setCatalogo(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setNropagina(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setCategoriamargen(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setPrecioventa2(cursor.isNull(offset + 24) ? null : cursor.getDouble(offset + 24));
        entity.setPrecioventa3(cursor.isNull(offset + 25) ? null : cursor.getDouble(offset + 25));
        entity.setPrecioventa4(cursor.isNull(offset + 26) ? null : cursor.getDouble(offset + 26));
        entity.setMaximodescuento(cursor.isNull(offset + 27) ? null : cursor.getDouble(offset + 27));
        entity.setProduccion(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setIdgrupo(cursor.isNull(offset + 29) ? null : cursor.getLong(offset + 29));
        entity.setMultiplicador(cursor.isNull(offset + 30) ? null : cursor.getLong(offset + 30));
        entity.setIdempresa(cursor.isNull(offset + 31) ? null : cursor.getLong(offset + 31));
        entity.setIdproductMigracionFabricaCalzado(cursor.isNull(offset + 32) ? null : cursor.getLong(offset + 32));
        entity.setMd5imagen(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setIdarticulosucursalubicacion(cursor.isNull(offset + 34) ? null : cursor.getLong(offset + 34));
        entity.setCodgradeEnarticulosucursalubicacion(cursor.isNull(offset + 35) ? null : cursor.getLong(offset + 35));
        entity.setIndlanzamiento(cursor.isNull(offset + 36) ? null : cursor.getShort(offset + 36) != 0);
    }

    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(Articulo entity, long rowId) {
        entity.setIdarticulo(rowId);
        return rowId;
    }

    /** @inheritdoc */
    @Override
    public Long getKey(Articulo entity) {
        if(entity != null) {
            return entity.getIdarticulo();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override
    protected boolean isEntityUpdateable() {
        return true;
    }

}
