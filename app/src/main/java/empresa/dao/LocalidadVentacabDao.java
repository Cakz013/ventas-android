package empresa.dao;

/**
 * Created by Rescate on 31/07/2017.
 */


import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;



// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/**
 * DAO for table LOCALIDAD_VENTACAB.
 */
public class LocalidadVentacabDao extends AbstractDao<LocalidadVentacab, Long> {

    public static final String TABLENAME = "LOCALIDAD_VENTACAB";

    /**
     * Properties of entity LocalidadVentacab.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Idventacab = new Property(0, Long.class, "idventacab", true, "IDVENTACAB");
        public final static Property Latitud = new Property(1, double.class, "latitud", false, "LATITUD");
        public final static Property Longitud = new Property(2, double.class, "longitud", false, "LONGITUD");
    };


    public LocalidadVentacabDao(DaoConfig config) {
        super(config);
    }

    public LocalidadVentacabDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'LOCALIDAD_VENTACAB' (" + //
                "'IDVENTACAB' INTEGER PRIMARY KEY ," + // 0: idventacab
                "'LATITUD' REAL NOT NULL ," + // 1: latitud
                "'LONGITUD' REAL NOT NULL );"); // 2: longitud
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'LOCALIDAD_VENTACAB'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, LocalidadVentacab entity) {
        stmt.clearBindings();

        Long idventacab = entity.getIdventacab();
        if (idventacab != null) {
            stmt.bindLong(1, idventacab);
        }
        stmt.bindDouble(2, entity.getLatitud());
        stmt.bindDouble(3, entity.getLongitud());
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }

    /** @inheritdoc */
    @Override
    public LocalidadVentacab readEntity(Cursor cursor, int offset) {
        LocalidadVentacab entity = new LocalidadVentacab( //
                cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // idventacab
                cursor.getDouble(offset + 1), // latitud
                cursor.getDouble(offset + 2) // longitud
        );
        return entity;
    }

    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, LocalidadVentacab entity, int offset) {
        entity.setIdventacab(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setLatitud(cursor.getDouble(offset + 1));
        entity.setLongitud(cursor.getDouble(offset + 2));
    }

    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(LocalidadVentacab entity, long rowId) {
        entity.setIdventacab(rowId);
        return rowId;
    }

    /** @inheritdoc */
    @Override
    public Long getKey(LocalidadVentacab entity) {
        if(entity != null) {
            return entity.getIdventacab();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override
    protected boolean isEntityUpdateable() {
        return true;
    }

}
